apply from: "../commons-device.gradle"

android {
    defaultConfig {
        applicationId "org.torproject.android.mini"
        minSdkVersion 16
        targetSdkVersion 30
    }

    flavorDimensions "freemini"

    productFlavors {
        mini {
            dimension "freemini"
            minSdkVersion 16
            applicationId 'org.torproject.android.mini'
            targetSdkVersion 28
            versionCode 10020000
            versionName 'mini-1.0.0-BETA-2-tor-0.4.5.7'
            archivesBaseName = "Orbot-mini-$versionName"
        }
    }

    packagingOptions {
        exclude 'lib/x86/libgojni.so'
        exclude 'lib/x86_64/libgojni.so'
        exclude 'lib/arm64-v8a/libgojni.so'
        exclude 'lib/armeabi-v7a/libgojni.so'
        exclude 'lib/armeabi/libgojni.so'
    }
}

dependencies {
    implementation(
            project(path: ':appcore'),
            project(path: ':intentintegrator'),
            project(':orbotservice'),
            'androidx.constraintlayout:constraintlayout:2.1.0',
            'androidx.coordinatorlayout:coordinatorlayout:1.1.0',
            'androidx.recyclerview:recyclerview:1.2.1',
            'androidx.palette:palette:1.0.0',
            'com.github.apl-devs:appintro:v4.2.2',
            'com.google.android.material:material:1.4.0'
    )
    androidTestImplementation "tools.fastlane:screengrab:1.2.0"
}

// For each APK output variant, override version code of outputs based on ABI codes
// ex) 'mips' -> 3xxx
// ex) 'x86' -> 4xxx
android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def baseVersionCode = project.ext.abiCodes.get(output.getFilter(com.android.build.OutputFile.ABI))
        if (baseVersionCode != null) {
            output.versionCodeOverride = Integer.valueOf(baseVersionCode + variant.versionCode)
        }
    }
}
